 set nocompatible               " be iMproved
 filetype on                   " required!
 filetype indent on
 filetype plugin on
 set nofoldenable

 " Backspace
 set backspace=indent,eol,start

 " Mapleader
 let mapleader = "\<Space>"

 set background=dark

 " Vundle
 set rtp+=~/.vim/bundle/vundle/
 call vundle#rc()

 " Color scheme
 colorscheme wombat256mod

 " Line Numbers
 set number

" Tabstop
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2
set smarttab
 
 " Switch off all auto-indenting
 set nocindent
 set nosmartindent
 set autoindent
 set indentexpr=
 set rtp+=$GOROOT/misc/vim
 filetype plugin indent off
 syntax on
 set mouse=r

 " Case Insensitive search
 set ignorecase

 " Source LESS in Vim
 au BufRead,BufNewFile *.less set filetype=less
 " source vcl
 au BufRead,BufNewFile *.vcl set filetype=vcl
 " Source ejs in Vim
 au BufNewFile,BufRead *.ejs set filetype=html
 " Source pug in vim
 au BufNewFile,BufRead *.pug set filetype=pug

 " Source Go VIM
 au BufRead,BufNewFile *.go set filetype=go
 let g:go_highlight_functions = 1
 let g:go_highlight_methods = 1
 let g:go_highlight_structs = 1
 "source ~/.vim/bundle/vim-go/syntax/go.vim
 " Source PUG
 au BufNewFile,BufRead *.jade setf pug

 " PuTTY
 "if &term =~ "xterm"
	"256 color --
	let &t_Co=256
 "endif

 " let Vundle manage Vundle
 " required! 
 Bundle 'gmarik/vundle'

 " Functional
 Bundle 'scrooloose/nerdtree.git'
 Bundle 'scrooloose/nerdcommenter.git'
 Bundle 'ervandew/supertab.git'
  let g:SuperTabDefaultCompletionType = "<C-X><C-O>"

 Bundle 'jwhitley/vim-matchit'
 Bundle 'ctrlpvim/ctrlp.vim'
   " Ignore files in gitignore
   let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
   nmap <Leader>r :CtrlPMRU<CR>
   vmap <Leader>r :CtrlPMRU<CR>
   nmap <Leader>f :CtrlP<CR>
   vmap <Leader>f :CtrlP<CR>

 Bundle 'easymotion/vim-easymotion'
   " Gif config
    map  / <Plug>(easymotion-sn)
    omap / <Plug>(easymotion-tn)
    " Smartcase
    let g:EasyMotion_smartcase = 1
    let g:EasyMotion_use_smartsign_us = 1
    " Jump to anywhere you want with minimal keystrokes, with just one key binding.
    " `s{char}{label}`
    nmap s <Plug>(easymotion-overwin-f)
    nmap w <Plug>(easymotion-w)

 Bundle 'Valloric/YouCompleteMe'
    set completeopt-=preview

 Bundle 'ternjs/tern_for_vim'
 Bundle 'airblade/vim-gitgutter'
 Bundle 'tpope/vim-fugitive.git'
 Bundle 'vim-airline/vim-airline'
 Bundle 'vim-airline/vim-airline-themes'
    set laststatus=2
    let g:airline_powerline_fonts=1
    let g:airline_theme='bubblegum'
    let g:airline#extensions#whitespace#enabled = 0
    highlight clear SignColumn

    function! AirlineInit() 
      let g:airline_section_a = airline#section#create(['mode', ' ', 'paste'])
      let g:airline_section_b = airline#section#create('%f')
      let g:airline_section_c = airline#section#create('')
      let g:airline_section_x = airline#section#create(['hunks'])
      let g:airline_section_y = airline#section#create(['branch'])
      let g:airline_section_z = airline#section#create(['%p%%'])
      "let g:airline_section_z = airline#section#create(['windowswap', 'obsession', '%3p%%'.spc, 'linenr', 'maxlinenr', spc.':%3v'])
      "let g:airline_section_z = airline#section#create(['%3p%%'.spc, 'linenr',  ':%3v'])
      call airline#update_statusline()
    endfunction
    call AirlineInit()
    autocmd VimEnter * call AirlineInit()

 " Syntax
 Bundle 'sheerun/vim-polyglot'

 Bundle 'godlygeek/tabular'
  nmap <Leader>a= :Tabularize /=<CR>
  vmap <Leader>a= :Tabularize /=<CR>
  nmap <Leader>a: :Tabularize /:<CR>
  vmap <Leader>a: :Tabularize /:<CR>


 " Snippits
 Bundle 'MarcWeber/vim-addon-mw-utils'
 Bundle 'tomtom/tlib_vim'
 Bundle 'garbas/vim-snipmate'
 let g:snippets_dir="~/vimrc/snippets/"
 
 " Syntax Checkers
 Bundle 'nrocco/vim-phplint'
 Bundle 'hokaccha/vim-html5validator.git'
 Bundle 'scrooloose/syntastic.git'

 " vim-scripts repos
 " non github repos
 " Bundle 'git://git.wincent.com/command-t.git'
 " ...
 filetype plugin indent on     " required! 
 "
 " Brief help
 " :BundleList          - list configured bundles
 " :BundleInstall(!)    - install(update) bundles
 " :BundleSearch(!) foo - search(or refresh cache first) for foo
 " :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
 "
 " see :h vundle for more details or wiki for FAQ
 " NOTE: comments after Bundle command are not allowed..
 
 " Auto Open NERDTree when no file on command line
 function! StartUp()
	 if 0 == argc()
		 NERDTree
		 call feedkeys("\<C-W>l:q\<Enter>","t")
	 end
 endfunction
 au VimEnter * call StartUp()

 " Omnicomplete with SuperTab
 let g:SuperTabDefaultCompletionType = "context"

 "Default peekaboo window
 let g:peekaboo_window = 'vertical botright 30new'

 " Ctrl-P - Enter to Open in New Tab
 let g:ctrlp_prompt_mappings = {
	 \ 'AcceptSelection("e")': ['<c-t>'],
	 \ 'AcceptSelection("t")': ['<cr>'],
	 \ }

 " reset background color or exit
 au VimLeave * !tput sgr0
